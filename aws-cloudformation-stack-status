#!/bin/bash
#
# aws-cloudformation-stack-status --region $region --watch --stack-name $stack
#
# See: https://github.com/alestic/aws-cloudformation-stack-status
#
function usage() {
  cat <<USAGE
Clean display of single most recent event status for each resource in a CloudFormation stack

  For more details see https://github.com/alestic/aws-cloudformation-stack-status
  Usage: $0 --region \$region --watch --stack-name \$stack

Example#1
  Monitor all stack resource progress live (Interrupt with Ctrl-C):
  aws-cloudformation-stack-status --watch --region $region --stack-name $stack

Example#2
  The --stack-name is optional, and multiple stacks can be monitored together:
  watch aws-cloudformation-stack-status --watch $webstack $dbstack $dnsstack

Example#3
  One time display of latest status for each stack resource:
  aws-cloudformation-stack-status --region $region --stack-name $stack

Requirements
This script does require that you have already installed and configured the aws-cli.

USAGE

}
region_opt=
stack_names=
watch=
while [ $# -gt 0 ]; do
  case $1 in
    --region)     region_opt="--region $2";               shift 2 ;;
    --stack-name) stack_names="$stack_names $2";          shift 2 ;;
    --watch)      watch=1;                                shift ;;
		help)					usage; exit 0;;
		--help)				usage; exit 0;;
		--*)          echo "$0: Unrecognized option: $1" >&2; usage; exit 1  ;;
		*) break;;
  esac
done
set -- $stack_names $@

if [ -n "$watch" ]; then
  watch -t -n1 $0 $region_opt "$@"
fi

for stack_name; do
  aws cloudformation describe-stack-events \
    $region_opt \
    --stack-name "$stack_name" \
    --output text \
    --query 'StackEvents[*].[ResourceStatus,LogicalResourceId,ResourceType,Timestamp]' |
  sort -k4r |
  perl -ane 'print if !$seen{$F[1]}++'
done |
  column -t
